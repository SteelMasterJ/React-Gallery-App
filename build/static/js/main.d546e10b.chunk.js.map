{"version":3,"sources":["components/SearchForm.js","components/Nav.js","components/Photo.js","components/NotFound.js","components/PhotoContainer.js","components/ForOhFor.js","App.js","config.js","serviceWorker.js","index.js"],"names":["SearchForm","props","history","useHistory","React","useState","formValues","setFormValues","className","onSubmit","e","preventDefault","push","pathname","search","console","log","onSearch","currentTarget","reset","type","onChange","evt","target","value","name","placeholder","required","id","fill","height","viewBox","width","xmlns","d","navLinkStyles","display","background","borderRadius","padding","color","cursor","Nav","handleClick","path","style","onClick","Photo","src","farm","server","secret","alt","title","NotFound","PhotoContainer","location","useLocation","useEffect","performSearch","slice","photos","results","data","length","map","photo","key","loading","FourOhFour","App","query","state","searchWord","axios","get","then","response","setState","pictures","catch","error","this","render","exact","component","ForOhFor","Component","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d546e10b.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst SearchForm = (props) => {\n  \n  const history = useHistory();\n\n  const [formValues, setFormValues] = React.useState({})\n\n  const handleValueChange = (evt) => {\n    //console.log(evt);\n    const {value, name} = evt.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n    //console.log(formValues);\n  }\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    history.push({\n      pathname: `/search/${formValues.search}`\n    })\n    console.log('1st console log ' + formValues.search);\n    props.onSearch(formValues.search);\n    e.currentTarget.reset();\n    console.log('2nd console log ' + formValues.search);\n  }\n  \n  return (\n    <form className=\"search-form\" onSubmit={handleSubmit} >\n      <input type=\"search\" \n              onChange={handleValueChange}\n              name=\"search\"\n              //ref={(input) => this.query = input}\n              placeholder=\"Search\" \n              required\n              />\n      <button type=\"submit\" id=\"submit\" className=\"search-button\">\n          <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n      </button>\n    </form>      \n  );\n}\n\nexport default SearchForm;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Nav = (props) => {\n\n  const history = useHistory();\n\n  const handleClick = path => {\n    history.push(`/search/${path}`);\n    props.onSearch(path);\n  }\n\n  return (\n    <nav className=\"main-nav\">\n      <ul>\n        <li style={navLinkStyles} onClick={() => handleClick(\"forests\")}>Forests</li>\n        <li style={navLinkStyles} onClick={() => handleClick(\"mountains\")}>Mountains</li>\n        <li style={navLinkStyles} onClick={() => handleClick(\"ocean\")}>Ocean</li>\n      </ul>    \n    </nav>\n  );\n}\n\nconst navLinkStyles = {\n  display: 'block',\n  background: '#438bbd',\n  borderRadius: '3px',\n  padding: '5px',\n  color: '#fff',\n  cursor: 'pointer',\n};\n\nexport default Nav;","import React from 'react';\n\nconst Photo = props => (\n  <li>\n    <img \n      src={`https://farm${props.farm}.staticflickr.com/${props.server}/${props.id}_${props.secret}.jpg`} \n      alt={props.title} />\n  </li>\n);\n\nexport default Photo;","import React from 'react';\n\nconst NotFound = props => (\n  <li className=\"not-found\">\n    <h3>No Results Found</h3>\n    <p>You search did not return any results. Please try again.</p>\n  </li>\n);\n\nexport default NotFound;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Photo from './Photo';\nimport NotFound from './NotFound';\n\nconst PhotoContainer = (props) => { \n  const location = useLocation();\n\n  React.useEffect( () => {\n    console.log('mounted in container, location = ', location.pathname);\n    (location.pathname === '/') ? props.performSearch('cats') : props.performSearch(location.pathname.slice(8));\n  }, [location.pathname, props]);\n\n  const results = props.data;\n  let photos;\n  if(results.length > 0) {\n    photos = results.map(photo =>\n      <Photo \n      farm={photo.farm} \n      key={photo.id}\n      id={photo.id}\n      server={photo.server}\n      secret={photo.secret}\n      title={photo.title}\n      />\n    );\n  } else {\n    photos = <NotFound />\n  }\n\n  return(\n    <div className=\"photo-container\">\n      <h2>Results</h2>\n        {\n          (props.loading)\n          ? <p>loading...</p>\n          : ( <ul>\n                  {photos}\n              </ul>)\n        }\n    </div>\n  );\n}\n\nexport default PhotoContainer;","import React from 'react'\n\n// Overly simple 404 page\n\nconst FourOhFour = () => {\n    return (\n        <div>\n                <p>404</p>\n                <p>¯\\_(ツ)_/¯</p>\n                <p>Ain't No Page like that round here.</p>\n        </div>\n    )\n}\n\nexport default FourOhFour","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport axios from 'axios';\nimport apikey from './config';\n\nimport SearchForm from './components/SearchForm';\nimport Nav from './components/Nav';\nimport PhotoContainer from './components/PhotoContainer';\nimport ForOhFor from './components/ForOhFor';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      pictures: [],\n      loading: true,\n      searchWord: 'hi'\n    };\n  }\n\n  performSearch = (query) => {\n    console.log('performSearch has fired', query);\n    if(this.state.searchWord !== query) {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apikey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n        .then(response => {\n          this.setState({\n            pictures: response.data.photos.photo,\n            loading: false,\n            searchWord: query\n          });\n        })\n        .catch(error => {\n          console.log('Error fetching and parsing data', error);\n        });\n    }\n  }\n\n  render() {\n    console.log(this.state.pictures);\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <SearchForm onSearch={this.performSearch} />\n          <Nav onSearch={this.performSearch} />\n          <Switch>\n            <Route path=\"/search/:id\" render={ () => <PhotoContainer data={this.state.pictures} performSearch={this.performSearch} loading={this.state.loading}/> } />\n            <Route exact path=\"/\" render={ () => <PhotoContainer data={this.state.pictures} performSearch={this.performSearch}/>} />\n            <Route component={ForOhFor} />\n          </Switch>          \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const apiKey = '9cf0f52d3a5a8bd3e54bbc348e299d4d';\nexport default apiKey;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}